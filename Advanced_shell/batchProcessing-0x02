#!/bin/bash

# List of Pokémon
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output folder
DATA_DIR="pokemon_data"
mkdir -p "$DATA_DIR"

# Error log file
ERROR_FILE="errors.txt"
: > "$ERROR_FILE"  # clear previous errors

# Function to fetch Pokémon data with retries
fetch_pokemon() {
    local pokemon=$1
    local output_file="$DATA_DIR/${pokemon}.json"
    local api_url="https://pokeapi.co/api/v2/pokemon/$pokemon"
    local max_retries=3
    local attempt=1

    while [ $attempt -le $max_retries ]; do
        echo "Fetching data for $pokemon (Attempt $attempt)..."
        http_code=$(curl -s -w "%{http_code}" -o "$output_file" "$api_url")

        if [ "$http_code" -eq 200 ]; then
            echo "Saved data to $output_file ✅"
            return 0
        else
            echo "⚠️  Failed to fetch $pokemon (HTTP $http_code)"
            attempt=$((attempt + 1))
            sleep 2  # wait before retry
        fi
    done

    echo "❌ Giving up on $pokemon after $max_retries attempts" | tee -a "$ERROR_FILE"
    rm -f "$output_file"
    return 1
}

# Loop through Pokémon list
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon"
    sleep 2  # extra delay to avoid API rate limit
done

